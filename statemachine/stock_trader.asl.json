{
    "Comment": "A state machine that does mock stock trading.",
    "StartAt": "Get Environment Information",
    "States": {
        "Get Environment Information": {
            "Type": "Task",
            "Resource": "${GetEnvironmentInfoFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 15,
                    "MaxAttempts": 5,
                    "BackoffRate": 1.5
                }
            ],
            "Next": "Environment Health Check"
        },
        "Environment Health Check": {
            "Type": "Task",
            "Resource": "${EnvironmentHealthCheckFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 45,
                    "MaxAttempts": 15,
                    "BackoffRate": 1.5
                }
            ],
            "Next": "Resize EBS Volume"
        },
        "Resize EBS Volume": {
            "Type": "Task",
            "Resource": "${ResizeEBSFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 90,
                    "MaxAttempts": 5,
                    "BackoffRate": 2
                }
            ],
            "Next": "Get or Create IAM Role"
        },
        "Get or Create IAM Role": {
            "Type": "Task",
            "Resource": "${GetOrCreateIAMRoleFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 30,
                    "MaxAttempts": 5,
                    "BackoffRate": 1.5
                }
            ],
            "Next": "Send Command"
        },
        "Send Command": {
            "Type": "Task",
            "Resource": "${SendCommandFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 90,
                    "MaxAttempts": 10,
                    "BackoffRate": 1.5
                }
            ],
            "Next": "Wait To Stabilize"
        },
        "Wait To Stabilize": {
            "Type": "Task",
            "Resource": "${WaitForStabilizeFunctionArn}",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "IntervalSeconds": 15,
                    "MaxAttempts": 5,
                    "BackoffRate": 1.5
                }
            ],
             "End": true
        }
    }
}